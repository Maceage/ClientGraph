@using ClientGraph.Domain.Enumerations
@model ClientGraph.Models.PracticeModel

@{
    ViewBag.Title = "Practice Details";
}

<h2>Practice Details</h2>

<div>
    <hr />
    <h4>Details</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CompanyName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CompanyName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EmailAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EmailAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.WebsiteUrl)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.WebsiteUrl)
        </dd>

    </dl>
</div>

<div>
    <hr />
    <h4>Relationships</h4>
    <hr />
    <table class="table">
        <tr>
            <th>
                Entity Name
            </th>
            <th>
                Entity Type
            </th>
            <th>
                Relationship Type
            </th>
        </tr>

        @foreach (var item in Model.Relationships.OrderByDescending(r => r.ChildEntityName))
        {
            <tr>
                <td>
                    @switch (item.ChildEntityType)
                    {
                        case EntityType.Client:
                            @Html.ActionLink(item.ChildEntityName, "Details", "Client", new { id = item.ChildEntityId }, null)
                            break;
                        case EntityType.Contact:
                            @Html.ActionLink(item.ChildEntityName, "Details", "Contact", new { id = item.ChildEntityId }, null)
                            break;
                        case EntityType.Practice:
                            @Html.ActionLink(item.ChildEntityName, "Details", "Practice", new { id = item.ChildEntityId }, null)
                            break;
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ChildEntityType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RelationshipType)
                </td>
            </tr>
        }
    </table>
</div>

<div>
    <hr />
    <h4>Versions</h4>
    <table class="table">
        <tr>
            <th>
                Version Number
            </th>
            <th>
                Date
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Versions.OrderByDescending(v => v.VersionNumber))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.VersionNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastModified)
                </td>
                <td>
                    @if (item.VersionNumber != Model.Versions.Count)
                    {
                        @Html.ActionLink("Restore", "RestoreVersion", new { id = Model.Id, versionId = item.VersionId })
                    }
                </td>
            </tr>
        }
    </table>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id  }) |
    @Html.ActionLink("Back to List", "Index")
</p>
